l),this.selectedMap[l]){var h=t.addNode(o.name,o);h.rawIndex=n}}}for(var n=0,a=e.links.length;a>n;n++){var d=e.links[n],c=d.source,p=d.target;"number"==typeof c&&(c=i[c],c&&(c=c.name)),"number"==typeof p&&(p=i[p],p&&(p=p.name));var m=t.addEdge(c,p,d);m&&(m.rawIndex=n)}return t.eachNode(function(e){var t=e.data.value;if(null==t){t=0;for(var i=0;i<e.edges.length;i++)t+=e.edges[i].data.weight||0}e.layout={size:t,mass:0}}),t.eachEdge(function(e){e.layout={weight:null==e.data.weight?1:e.data.weight}}),t},_initLayout:function(e){var t=this._graph,i=t.nodes.length,n=this.query(e,"minRadius"),a=this.query(e,"maxRadius");this._steps=e.steps||1;var r=this._layout;r.center=this.parseCenter(this.zr,e.center),r.width=this.parsePercent(e.size,this.zr.getWidth()),r.height=this.parsePercent(e.size,this.zr.getHeight()),r.large=e.large,r.scaling=e.scaling,r.ratioScaling=e.ratioScaling,r.gravity=e.gravity,r.temperature=1,r.coolDown=e.coolDown,r.preventNodeEdgeOverlap=e.preventOverlap,r.preventNodeOverlap=e.preventOverlap;for(var s=1/0,l=-(1/0),h=0;i>h;h++){var d=t.nodes[h];l=Math.max(d.layout.size,l),s=Math.min(d.layout.size,s)}for(var c=l-s,h=0;i>h;h++){var d=t.nodes[h];c>0?(d.layout.size=(d.layout.size-s)*(a-n)/c+n,d.layout.mass=d.layout.size/a):(d.layout.size=(a-n)/2,d.layout.mass=.5)}for(var h=0;i>h;h++){var d=t.nodes[h];if("undefined"!=typeof this.__nodePositionMap[d.id])d.layout.position=f.create(),f.copy(d.layout.position,this.__nodePositionMap[d.id]);else if("undefined"!=typeof d.data.initial)d.layout.position=f.create(),f.copy(d.layout.position,d.data.initial);else{var p=this._layout.center,m=Math.min(this._layout.width,this._layout.height);d.layout.position=o(p[0],p[1],.8*m)}var u=d.shape.style,g=d.layout.size;u.width=u.width||2*g,u.height=u.height||2*g,u.x=-u.width/2,u.y=-u.height/2,f.copy(d.shape.position,d.layout.position)}i=t.edges.length,l=-(1/0);for(var h=0;i>h;h++){var y=t.edges[h];y.layout.weight>l&&(l=y.layout.weight)}for(var h=0;i>h;h++){var y=t.edges[h];y.layout.weight/=l}this._layout.init(t,e.useWorker)},_buildNodeShapes:function(e,t)